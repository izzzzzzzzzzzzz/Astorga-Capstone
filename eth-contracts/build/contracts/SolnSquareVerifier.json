{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "tokenHash",
          "type": "bytes32"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"tokenHash\",\"type\":\"bytes32\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xd33a5c5937ee17a1276aabec3b1ad693c4cf45610bda2d1871f366f7d1cf15ae\",\"urls\":[\"bzz-raw://ab391c776aa2220ea5f097ddfb12377f35b441d9845a4776f9729d99e1eb769e\",\"dweb:/ipfs/Qmf3ViG2dvaMrNroJ3Ntpg4oVCBRgRMipReBwQQQJ7d77Z\"]},\"/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x4173d4eeb48c7f2ae342ca8f3effc54e0a9e32df1f0a05056581624a94438f6f\",\"urls\":[\"bzz-raw://69091a2a1620f95ff5389bfe0b988fb3fe3c3cbc726dc34ad8ae072cda58b9b0\",\"dweb:/ipfs/QmcBzCX8kJwmPWSmPCYDqLEQReEAq5w2wiATduHAkJA64p\"]},\"/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/Verifier.sol\":{\"keccak256\":\"0x639779c505460fac67578f4aca0fc19b794d7c964802d632a93ac8a936e5be54\",\"urls\":[\"bzz-raw://03f7a229d389e2c6977b99fe66fb3480a00ac80e58a9e968a246b5b249b110a5\",\"dweb:/ipfs/QmdnipX2e93ErDA9JFfZDC5CpPhvesfg3Je84NibvdHKsp\"]},\"/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200372a3803806200372a833981810160405260208110156200003757600080fd5b81019080805190602001909291905050506040518060400160405280600881526020017f415354546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f41535400000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f8152602001620036eb603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca60405160405180910390a36000600160146101000a81548160ff021916908315150217905550620001bd6301ffc9a760e01b6200029b60201b60201c565b620001d56380ac58cd60e01b6200029b60201b60201c565b620001ed63780e9d6360e01b6200029b60201b60201c565b8260109080519060200190620002059291906200033c565b5081601190805190602001906200021e9291906200033c565b508060129080519060200190620002379291906200033c565b5062000250635b5e139f60e01b6200029b60201b60201c565b50505080601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620003eb565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002cf57600080fd5b600160026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200037f57805160ff1916838001178555620003b0565b82800160010185558215620003b0579182015b82811115620003af57825182559160200191906001019062000392565b5b509050620003bf9190620003c3565b5090565b620003e891905b80821115620003e4576000816000905550600101620003ca565b5090565b90565b6132f080620003fb6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80634f6ccce7116100c3578063a22cb4651161007c578063a22cb46514610a4e578063b88d4fde14610a9e578063c87b56dd14610ba3578063d547cfb714610c4a578063e985e9c514610ccd578063f2fde38b14610d4957610158565b80634f6ccce71461086f5780636352211e146108b157806370a082311461091f5780638456cb59146109775780638da5cb5b1461098157806395d89b41146109cb57610158565b806327dc297e1161011557806327dc297e1461038d5780632f745c591461045257806338bbfa50146104b45780633eec14da1461061057806340c10f191461079b57806342842e0e1461080157610158565b806301ffc9a71461015d57806306fdde03146101c2578063081812fc14610245578063095ea7b3146102b357806318160ddd1461030157806323b872dd1461031f575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d8d565b604051808215151515815260200191505060405180910390f35b6101ca610df5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561020a5780820151818401526020810190506101ef565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102716004803603602081101561025b57600080fd5b8101908080359060200190929190505050610e97565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ed4565b005b6103096110e7565b6040518082815260200191505060405180910390f35b61038b6004803603606081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110f4565b005b610450600480360360408110156103a357600080fd5b8101908080359060200190929190803590602001906401000000008111156103ca57600080fd5b8201836020820111156103dc57600080fd5b803590602001918460018302840111640100000000831117156103fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611117565b005b61049e6004803603604081101561046857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061115a565b6040518082815260200191505060405180910390f35b61060e600480360360608110156104ca57600080fd5b8101908080359060200190929190803590602001906401000000008111156104f157600080fd5b82018360208201111561050357600080fd5b8035906020019184600183028401116401000000008311171561052557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561058857600080fd5b82018360208201111561059a57600080fd5b803590602001918460018302840111640100000000831117156105bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111cd565b005b610799600480360361018081101561062757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610706578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906106b2565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506111d2565b005b6107e7600480360360408110156107b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114eb565b604051808215151515815260200191505060405180910390f35b61086d6004803603606081101561081757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611595565b005b61089b6004803603602081101561088557600080fd5b81019080803590602001909291905050506115b5565b6040518082815260200191505060405180910390f35b6108dd600480360360208110156108c757600080fd5b81019080803590602001909291905050506115e9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109616004803603602081101561093557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611626565b6040518082815260200191505060405180910390f35b61097f611676565b005b61098961181d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109d3611846565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a135780820151818401526020810190506109f8565b50505050905090810190601f168015610a405780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a9c60048036036040811015610a6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506118e8565b005b610ba160048036036080811015610ab457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b1b57600080fd5b820183602082011115610b2d57600080fd5b80359060200191846001830284011164010000000083111715610b4f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a22565b005b610bcf60048036036020811015610bb957600080fd5b8101908080359060200190929190505050611a48565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c0f578082015181840152602081019050610bf4565b50505050905090810190601f168015610c3c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610c52611b0f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c92578082015181840152602081019050610c77565b50505050905090810190601f168015610cbf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d2f60048036036040811015610ce357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bb1565b604051808215151515815260200191505060405180910390f35b610d8b60048036036020811015610d5f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c45565b005b600060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e8d5780601f10610e6257610100808354040283529160200191610e8d565b820191906000526020600020905b815481529060010190602001808311610e7057829003601f168201915b5050505050905090565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610edf826115e9565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6164647265732069732073616d6520617320746865206f776e6572000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fc35750610fc28133611bb1565b5b611035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f7420617070726f766564000000000000000000000000000000000000000081525060200191505060405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600980549050905090565b6110fe3382611e4c565b61110757600080fd5b611112838383611ee1565b505050565b611156828260006040519080825280601f01601f1916602001820160405280156111505781602001600182028038833980820191505090505b506111cd565b5050565b600061116583611626565b821061117057600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106111ba57fe5b9060005260206000200154905092915050565b505050565b6000848484846040516020018085600260200280838360005b838110156112065780820151818401526020810190506111eb565b505050509050018460026000925b8184101561125a5782846020020151600260200280838360005b8381101561124957808201518184015260208101905061122e565b505050509050019260010192611214565b9250505083600260200280838360005b8381101561128557808201518184015260208101905061126a565b5050505090500182600260200280838360005b838110156112b3578082015181840152602081019050611298565b505050509050019450505050506040516020818303038152906040528051906020012090506016600082815260200190815260200160002060009054906101000a900460ff161561136c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e20616c72656164792065786973747300000000000000000081525060200191505060405180910390fd5b611374613164565b60405180608001604052808881526020018973ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160011515815250905080601560008981526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505060016016600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb28582aaae510e6d1868676347916349fa4c0c49734e1a01e4373ff26a57f092888884604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a15050505050505050565b60006015600083815260200190815260200160002060030160009054906101000a900460ff16611583576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4475706c696361746520736f6c7574696f6e000000000000000000000000000081525060200191505060405180910390fd5b61158d8383611f05565b905092915050565b6115b083838360405180602001604052806000815250611a22565b505050565b60006115bf6110e7565b82106115ca57600080fd5b600982815481106115d757fe5b90600052602060002001549050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061166f600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fc9565b9050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461171b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132796022913960400191505060405180910390fd5b600160149054906101000a900460ff161561179e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f556e706175736520636f6e74726163740000000000000000000000000000000081525060200191505060405180910390fd5b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118de5780601f106118b3576101008083540402835291602001916118de565b820191906000526020600020905b8154815290600101906020018083116118c157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561192157600080fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611a2d8484846110f4565b611a3984848484611fd7565b611a4257600080fd5b50505050565b6060611a53826121c0565b611a5c57600080fd5b601360008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b035780601f10611ad857610100808354040283529160200191611b03565b820191906000526020600020905b815481529060010190602001808311611ae657829003601f168201915b50505050509050919050565b606060128054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ba75780601f10611b7c57610100808354040283529160200191611ba7565b820191906000526020600020905b815481529060010190602001808311611b8a57829003601f168201915b5050505050905090565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611cea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132796022913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d8d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f61646472657373206973206e6f742076616c696400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca60405160405180910390a350565b600080611e58836115e9565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ec757508373ffffffffffffffffffffffffffffffffffffffff16611eaf84610e97565b73ffffffffffffffffffffffffffffffffffffffff16145b80611ed85750611ed78185611bb1565b5b91505092915050565b611eec838383612232565b611ef683826124aa565b611f008282612648565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132796022913960400191505060405180910390fd5b611fb6838361270f565b611fbf82612730565b6001905092915050565b600081600001549050919050565b6000611ff88473ffffffffffffffffffffffffffffffffffffffff16612881565b61200557600190506121b8565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156120e05780820151818401526020810190506120c5565b50505050905090810190601f16801561210d5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561212f57600080fd5b505af1158015612143573d6000803e3d6000fd5b505050506040513d602081101561215957600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff16612252826115e9565b73ffffffffffffffffffffffffffffffffffffffff16146122be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061329b6021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5472616e73666572206e6f7420746f20612076616c696420616464726573730081525060200191505060405180910390fd5b61236a816128cc565b6123b1600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061298a565b6123f8600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129ad565b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006125026001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506129c390919063ffffffff16565b90506000600860008481526020019081526020016000205490508181146125ef576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061256f57fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106125c757fe5b9060005260206000200181905550816008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361264191906131a7565b5050505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506008600083815260200190815260200160002081905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6127198282612a0d565b6127238282612648565b61272c81612c25565b5050565b612739816121c0565b6127ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b61285760128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128445780601f1061281957610100808354040283529160200191612844565b820191906000526020600020905b81548152906001019060200180831161282757829003601f168201915b505050505061285283612c71565b612d9e565b60136000838152602001908152602001600020908051906020019061287d9291906131d3565b5050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156128c357506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129875760006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6129a2600182600001546129c390919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612a0583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612de2565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ab0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f546f206973206e6f74207a65726f20616464726573730000000000000000000081525060200191505060405180910390fd5b612ab9816121c0565b15612b2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f546f6b656e496420616c7265616479206578697374730000000000000000000081525060200191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612bc5600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129ad565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612cb9576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612d99565b600082905060005b60008214612ce3578080600101915050600a8281612cdb57fe5b049150612cc1565b6060816040519080825280601f01601f191660200182016040528015612d185781602001600182028038833980820191505090505b50905060006001830390505b60008614612d9157600a8681612d3657fe5b0660300160f81b82828060019003935081518110612d5057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681612d8957fe5b049550612d24565b819450505050505b919050565b6060612dda8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612ea2565b905092915050565b6000838311158290612e8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e54578082015181840152602081019050612e39565b50505050905090810190601f168015612e815780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612efe5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612f8357888181518110612f2a57fe5b602001015160f81c60f81b838380600101945081518110612f4757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f15565b600090505b8751811015612ff657878181518110612f9d57fe5b602001015160f81c60f81b838380600101945081518110612fba57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f88565b600090505b86518110156130695786818151811061301057fe5b602001015160f81c60f81b83838060010194508151811061302d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ffb565b600090505b85518110156130dc5785818151811061308357fe5b602001015160f81c60f81b8383806001019450815181106130a057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061306e565b600090505b845181101561314f578481815181106130f657fe5b602001015160f81c60f81b83838060010194508151811061311357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506130e1565b82995050505050505050505095945050505050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600080191681526020016000151581525090565b8154818355818111156131ce578183600052602060002091820191016131cd9190613253565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061321457805160ff1916838001178555613242565b82800160010185558215613242579182015b82811115613241578251825591602001919060010190613226565b5b50905061324f9190613253565b5090565b61327591905b80821115613271576000816000905550600101613259565b5090565b9056fe4f776e6572206f66207468697320636f6e747261637420697320726571756972656441646472657373206973206e6f74206f776e6572206f662074686520746f6b656ea265627a7a723158206e028618a4c3aebb9bb9705e23615aee9f9b3309e4a514935a6db89a53cbc9e264736f6c6343000510003268747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80634f6ccce7116100c3578063a22cb4651161007c578063a22cb46514610a4e578063b88d4fde14610a9e578063c87b56dd14610ba3578063d547cfb714610c4a578063e985e9c514610ccd578063f2fde38b14610d4957610158565b80634f6ccce71461086f5780636352211e146108b157806370a082311461091f5780638456cb59146109775780638da5cb5b1461098157806395d89b41146109cb57610158565b806327dc297e1161011557806327dc297e1461038d5780632f745c591461045257806338bbfa50146104b45780633eec14da1461061057806340c10f191461079b57806342842e0e1461080157610158565b806301ffc9a71461015d57806306fdde03146101c2578063081812fc14610245578063095ea7b3146102b357806318160ddd1461030157806323b872dd1461031f575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d8d565b604051808215151515815260200191505060405180910390f35b6101ca610df5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561020a5780820151818401526020810190506101ef565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102716004803603602081101561025b57600080fd5b8101908080359060200190929190505050610e97565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ed4565b005b6103096110e7565b6040518082815260200191505060405180910390f35b61038b6004803603606081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110f4565b005b610450600480360360408110156103a357600080fd5b8101908080359060200190929190803590602001906401000000008111156103ca57600080fd5b8201836020820111156103dc57600080fd5b803590602001918460018302840111640100000000831117156103fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611117565b005b61049e6004803603604081101561046857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061115a565b6040518082815260200191505060405180910390f35b61060e600480360360608110156104ca57600080fd5b8101908080359060200190929190803590602001906401000000008111156104f157600080fd5b82018360208201111561050357600080fd5b8035906020019184600183028401116401000000008311171561052557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561058857600080fd5b82018360208201111561059a57600080fd5b803590602001918460018302840111640100000000831117156105bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111cd565b005b610799600480360361018081101561062757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610706578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906106b2565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506111d2565b005b6107e7600480360360408110156107b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114eb565b604051808215151515815260200191505060405180910390f35b61086d6004803603606081101561081757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611595565b005b61089b6004803603602081101561088557600080fd5b81019080803590602001909291905050506115b5565b6040518082815260200191505060405180910390f35b6108dd600480360360208110156108c757600080fd5b81019080803590602001909291905050506115e9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109616004803603602081101561093557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611626565b6040518082815260200191505060405180910390f35b61097f611676565b005b61098961181d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109d3611846565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a135780820151818401526020810190506109f8565b50505050905090810190601f168015610a405780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a9c60048036036040811015610a6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506118e8565b005b610ba160048036036080811015610ab457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b1b57600080fd5b820183602082011115610b2d57600080fd5b80359060200191846001830284011164010000000083111715610b4f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a22565b005b610bcf60048036036020811015610bb957600080fd5b8101908080359060200190929190505050611a48565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c0f578082015181840152602081019050610bf4565b50505050905090810190601f168015610c3c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610c52611b0f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c92578082015181840152602081019050610c77565b50505050905090810190601f168015610cbf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d2f60048036036040811015610ce357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bb1565b604051808215151515815260200191505060405180910390f35b610d8b60048036036020811015610d5f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c45565b005b600060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e8d5780601f10610e6257610100808354040283529160200191610e8d565b820191906000526020600020905b815481529060010190602001808311610e7057829003601f168201915b5050505050905090565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610edf826115e9565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6164647265732069732073616d6520617320746865206f776e6572000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fc35750610fc28133611bb1565b5b611035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f7420617070726f766564000000000000000000000000000000000000000081525060200191505060405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600980549050905090565b6110fe3382611e4c565b61110757600080fd5b611112838383611ee1565b505050565b611156828260006040519080825280601f01601f1916602001820160405280156111505781602001600182028038833980820191505090505b506111cd565b5050565b600061116583611626565b821061117057600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106111ba57fe5b9060005260206000200154905092915050565b505050565b6000848484846040516020018085600260200280838360005b838110156112065780820151818401526020810190506111eb565b505050509050018460026000925b8184101561125a5782846020020151600260200280838360005b8381101561124957808201518184015260208101905061122e565b505050509050019260010192611214565b9250505083600260200280838360005b8381101561128557808201518184015260208101905061126a565b5050505090500182600260200280838360005b838110156112b3578082015181840152602081019050611298565b505050509050019450505050506040516020818303038152906040528051906020012090506016600082815260200190815260200160002060009054906101000a900460ff161561136c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e20616c72656164792065786973747300000000000000000081525060200191505060405180910390fd5b611374613164565b60405180608001604052808881526020018973ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160011515815250905080601560008981526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505060016016600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb28582aaae510e6d1868676347916349fa4c0c49734e1a01e4373ff26a57f092888884604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a15050505050505050565b60006015600083815260200190815260200160002060030160009054906101000a900460ff16611583576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4475706c696361746520736f6c7574696f6e000000000000000000000000000081525060200191505060405180910390fd5b61158d8383611f05565b905092915050565b6115b083838360405180602001604052806000815250611a22565b505050565b60006115bf6110e7565b82106115ca57600080fd5b600982815481106115d757fe5b90600052602060002001549050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061166f600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fc9565b9050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461171b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132796022913960400191505060405180910390fd5b600160149054906101000a900460ff161561179e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f556e706175736520636f6e74726163740000000000000000000000000000000081525060200191505060405180910390fd5b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118de5780601f106118b3576101008083540402835291602001916118de565b820191906000526020600020905b8154815290600101906020018083116118c157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561192157600080fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611a2d8484846110f4565b611a3984848484611fd7565b611a4257600080fd5b50505050565b6060611a53826121c0565b611a5c57600080fd5b601360008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b035780601f10611ad857610100808354040283529160200191611b03565b820191906000526020600020905b815481529060010190602001808311611ae657829003601f168201915b50505050509050919050565b606060128054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ba75780601f10611b7c57610100808354040283529160200191611ba7565b820191906000526020600020905b815481529060010190602001808311611b8a57829003601f168201915b5050505050905090565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611cea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132796022913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d8d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f61646472657373206973206e6f742076616c696400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca60405160405180910390a350565b600080611e58836115e9565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ec757508373ffffffffffffffffffffffffffffffffffffffff16611eaf84610e97565b73ffffffffffffffffffffffffffffffffffffffff16145b80611ed85750611ed78185611bb1565b5b91505092915050565b611eec838383612232565b611ef683826124aa565b611f008282612648565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132796022913960400191505060405180910390fd5b611fb6838361270f565b611fbf82612730565b6001905092915050565b600081600001549050919050565b6000611ff88473ffffffffffffffffffffffffffffffffffffffff16612881565b61200557600190506121b8565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156120e05780820151818401526020810190506120c5565b50505050905090810190601f16801561210d5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561212f57600080fd5b505af1158015612143573d6000803e3d6000fd5b505050506040513d602081101561215957600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff16612252826115e9565b73ffffffffffffffffffffffffffffffffffffffff16146122be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061329b6021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5472616e73666572206e6f7420746f20612076616c696420616464726573730081525060200191505060405180910390fd5b61236a816128cc565b6123b1600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061298a565b6123f8600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129ad565b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006125026001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506129c390919063ffffffff16565b90506000600860008481526020019081526020016000205490508181146125ef576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061256f57fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106125c757fe5b9060005260206000200181905550816008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361264191906131a7565b5050505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506008600083815260200190815260200160002081905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6127198282612a0d565b6127238282612648565b61272c81612c25565b5050565b612739816121c0565b6127ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b61285760128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128445780601f1061281957610100808354040283529160200191612844565b820191906000526020600020905b81548152906001019060200180831161282757829003601f168201915b505050505061285283612c71565b612d9e565b60136000838152602001908152602001600020908051906020019061287d9291906131d3565b5050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156128c357506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129875760006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6129a2600182600001546129c390919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612a0583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612de2565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ab0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f546f206973206e6f74207a65726f20616464726573730000000000000000000081525060200191505060405180910390fd5b612ab9816121c0565b15612b2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f546f6b656e496420616c7265616479206578697374730000000000000000000081525060200191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612bc5600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129ad565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612cb9576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612d99565b600082905060005b60008214612ce3578080600101915050600a8281612cdb57fe5b049150612cc1565b6060816040519080825280601f01601f191660200182016040528015612d185781602001600182028038833980820191505090505b50905060006001830390505b60008614612d9157600a8681612d3657fe5b0660300160f81b82828060019003935081518110612d5057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681612d8957fe5b049550612d24565b819450505050505b919050565b6060612dda8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612ea2565b905092915050565b6000838311158290612e8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e54578082015181840152602081019050612e39565b50505050905090810190601f168015612e815780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612efe5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612f8357888181518110612f2a57fe5b602001015160f81c60f81b838380600101945081518110612f4757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f15565b600090505b8751811015612ff657878181518110612f9d57fe5b602001015160f81c60f81b838380600101945081518110612fba57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f88565b600090505b86518110156130695786818151811061301057fe5b602001015160f81c60f81b83838060010194508151811061302d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ffb565b600090505b85518110156130dc5785818151811061308357fe5b602001015160f81c60f81b8383806001019450815181106130a057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061306e565b600090505b845181101561314f578481815181106130f657fe5b602001015160f81c60f81b83838060010194508151811061311357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506130e1565b82995050505050505050505095945050505050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600080191681526020016000151581525090565b8154818355818111156131ce578183600052602060002091820191016131cd9190613253565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061321457805160ff1916838001178555613242565b82800160010185558215613242579182015b82811115613241578251825591602001919060010190613226565b5b50905061324f9190613253565b5090565b61327591905b80821115613271576000816000905550600101613259565b5090565b9056fe4f776e6572206f66207468697320636f6e747261637420697320726571756972656441646472657373206973206e6f74206f776e6572206f662074686520746f6b656ea265627a7a723158206e028618a4c3aebb9bb9705e23615aee9f9b3309e4a514935a6db89a53cbc9e264736f6c63430005100032",
  "sourceMap": "501:3670:3:-;;;606:131;8:9:-1;5:2;;;30:1;27;20:12;5:2;606:131:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;606:131:3;;;;;;;;;;;;;;;;20491:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:10;723:6;;:19;;;;;;;;;;;;;;;;;;787:6;;;;;;;;;;;757:37;;783:1;757:37;;;;;;;;;;;;2199:5;2189:7;;:15;;;;;;;;;;;;;;;;;;3380:40;2977:10;3399:20;;3380:18;;;:40;;:::i;:::-;5526;5400:10;5545:20;;5526:18;;;:40;;:::i;:::-;13196:51;12802:10;13215:31;;13196:18;;;:51;;:::i;:::-;20640:4;20632:5;:12;;;;;;;;;;;;:::i;:::-;;20664:6;20654:7;:16;;;;;;;;;;;;:::i;:::-;;20696:12;20680:13;:28;;;;;;;;;;;;:::i;:::-;;20718:49;20302:10;20737:29;;20718:18;;;:49;;:::i;:::-;20491:283;;;714:15:3;680:16;;:50;;;;;;;;;;;;;;;;;;606:131;501:3670;;3730:158:0;3820:10;3805:25;;:11;:25;;;;;3797:34;;;;;;3877:4;3841:20;:33;3862:11;3841:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3730:158;:::o;501:3670:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "501:3670:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;501:3670:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3518:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3518:133:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20862:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20862:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6847:227;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6847:227:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6218:623;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6218:623:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13961:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8051:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8051:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:2;;;;;;;;;;;;;;;:::i;:::-;;13627:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13627:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;:::i;:::-;;1553:1404:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1553:1404:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1553:1404:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1553:1404:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1553:1404:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1553:1404:3;;;;;;;;;;;;;;:::i;:::-;;3186:983;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3186:983:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8237:132:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8237:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14392:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14392:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5934:211;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5934:211:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5579:349;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5579:349:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2659:112;;;:::i;:::-;;1031:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20955:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20955:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7366:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7366:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8375:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8375:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8375:211:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8375:211:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8375:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8375:211:0;;;;;;;;;;;;;;;:::i;:::-;;21153:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21153:151:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21153:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21048:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21048:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7900:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7900:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1166:438;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1166:438:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;3518:133;3588:4;3611:20;:33;3632:11;3611:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3604:40;;3518:133;;;:::o;20862:83::-;20901:13;20933:5;20926:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20862:83;:::o;6847:227::-;6906:7;7043:15;:24;7059:7;7043:24;;;;;;;;;;;;;;;;;;;;;7036:31;;6847:227;;;:::o;6218:623::-;6281:13;6297:16;6305:7;6297;:16::i;:::-;6281:32;;6423:5;6417:11;;:2;:11;;;;6409:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6597:5;6583:19;;:10;:19;;;:58;;;;6606:35;6623:5;6630:10;6606:16;:35::i;:::-;6583:58;6575:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6752:2;6725:15;:24;6741:7;6725:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6826:7;6822:2;6806:28;;6815:5;6806:28;;;;;;;;;;;;6218:623;;;:::o;13961:94::-;14005:7;14031:10;:17;;;;14024:24;;13961:94;:::o;8051:180::-;8141:39;8160:10;8172:7;8141:18;:39::i;:::-;8133:48;;;;;;8192:32;8206:4;8212:2;8216:7;8192:13;:32::i;:::-;8051:180;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;13627:182:0:-;13707:7;13742:16;13752:5;13742:9;:16::i;:::-;13734:5;:24;13726:33;;;;;;13776:12;:19;13789:5;13776:19;;;;;;;;;;;;;;;13796:5;13776:26;;;;;;;;;;;;;;;;13769:33;;13627:182;;;;:::o;14929:166:2:-;;;;:::o;1553:1404:3:-;1708:20;1758:1;1761;1764;1767:5;1741:32;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1741:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1741:32:3;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1741:32:3;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1741:32:3;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1741:32:3;;;1731:43;;;;;;1708:66;;1793:15;:29;1809:12;1793:29;;;;;;;;;;;;;;;;;;;;;1792:30;1784:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2078:24;;:::i;:::-;2105:41;;;;;;;;2114:7;2105:41;;;;2123:2;2105:41;;;;;;2127:12;2105:41;;;;2141:4;2105:41;;;;;2078:68;;2177:8;2156:9;:18;2166:7;2156:18;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2227:4;2195:15;:29;2211:12;2195:29;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;2629:40;2643:2;2647:7;2656:12;2629:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1553:1404;;;;;;;;:::o;3186:983::-;3244:4;3790:9;:18;3800:7;3790:18;;;;;;;;;;;:24;;;;;;;;;;;;3782:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4139:23;4150:2;4154:7;4139:10;:23::i;:::-;4132:30;;3186:983;;;;:::o;8237:132:0:-;8323:39;8340:4;8346:2;8350:7;8323:39;;;;;;;;;;;;:16;:39::i;:::-;8237:132;;;:::o;14392:148::-;14450:7;14485:13;:11;:13::i;:::-;14477:5;:21;14469:30;;;;;;14516:10;14527:5;14516:17;;;;;;;;;;;;;;;;14509:24;;14392:148;;;:::o;5934:211::-;5989:7;6118:11;:20;6130:7;6118:20;;;;;;;;;;;;;;;;;;;;;6111:27;;5934:211;;;:::o;5579:349::-;5634:7;5887:34;:17;:24;5905:5;5887:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5880:41;;5579:349;;;:::o;2659:112::-;962:6;;;;;;;;;;;948:20;;:10;:20;;;939:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:7;;;;;;;;;;;2355:8;2347:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2727:4;2717:7;;:14;;;;;;;;;;;;;;;;;;2746:18;2753:10;2746:18;;;;;;;;;;;;;;;;;;;;;;2659:112::o;1031:77::-;1069:7;1095:6;;;;;;;;;;;1088:13;;1031:77;:::o;20955:87::-;20996:13;21028:7;21021:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20955:87;:::o;7366:213::-;7451:10;7445:16;;:2;:16;;;;7437:25;;;;;;7509:8;7472:18;:30;7491:10;7472:30;;;;;;;;;;;;;;;:34;7503:2;7472:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7559:2;7532:40;;7547:10;7532:40;;;7563:8;7532:40;;;;;;;;;;;;;;;;;;;;;;7366:213;;:::o;8375:211::-;8481:31;8494:4;8500:2;8504:7;8481:12;:31::i;:::-;8530:48;8553:4;8559:2;8563:7;8572:5;8530:22;:48::i;:::-;8522:57;;;;;;8375:211;;;;:::o;21153:151::-;21211:13;21244:16;21252:7;21244;:16::i;:::-;21236:25;;;;;;21278:10;:19;21289:7;21278:19;;;;;;;;;;;21271:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21153:151;;;:::o;21048:99::-;21095:13;21127;21120:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21048:99;:::o;7900:145::-;7980:4;8003:18;:25;8022:5;8003:25;;;;;;;;;;;;;;;:35;8029:8;8003:35;;;;;;;;;;;;;;;;;;;;;;;;;7996:42;;7900:145;;;;:::o;1166:438::-;962:6;;;;;;;;;;;948:20;;:10;:20;;;939:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1456:1;1436:22;;:8;:22;;;;1427:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1509:8;1493:13;;:24;;;;;;;;;;;;;;;;;;1558:8;1532:35;;1550:6;;;;;;;;;;;1532:35;;;;;;;;;;;;1166:438;:::o;9292:246::-;9377:4;9393:13;9409:16;9417:7;9409;:16::i;:::-;9393:32;;9454:5;9443:16;;:7;:16;;;:51;;;;9487:7;9463:31;;:20;9475:7;9463:11;:20::i;:::-;:31;;;9443:51;:87;;;;9498:32;9515:5;9522:7;9498:16;:32::i;:::-;9443:87;9435:96;;;9292:246;;;;:::o;14915:239::-;15000:38;15020:4;15026:2;15030:7;15000:19;:38::i;:::-;15049:47;15082:4;15088:7;15049:32;:47::i;:::-;15107:40;15135:2;15139:7;15107:27;:40::i;:::-;14915:239;;;:::o;23067:161::-;23135:4;962:6;;;;;;;;;;;948:20;;:10;:20;;;939:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23151:18;23157:2;23161:7;23151:5;:18::i;:::-;23179:21;23192:7;23179:12;:21::i;:::-;23217:4;23210:11;;23067:161;;;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11647:347:0:-;11768:4;11793:15;:2;:13;;;:15::i;:::-;11788:58;;11831:4;11824:11;;;;11788:58;11856:13;11888:2;11872:36;;;11909:10;11921:4;11927:7;11936:5;11872:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11872:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11872:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11872:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11872:70:0;;;;;;;;;;;;;;;;11856:86;;4533:10;11970:16;;11960:26;;;:6;:26;;;;11952:35;;;11647:347;;;;;;;:::o;8780:152::-;8837:4;8853:13;8869:11;:20;8881:7;8869:20;;;;;;;;;;;;;;;;;;;;;8853:36;;8923:1;8906:19;;:5;:19;;;;8899:26;;;8780:152;;;:::o;10403:716::-;10587:4;10567:24;;:16;10575:7;10567;:16::i;:::-;:24;;;10559:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10730:1;10716:16;;:2;:16;;;;10708:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10811:23;10826:7;10811:14;:23::i;:::-;10920:35;:17;:23;10938:4;10920:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10965:33;:17;:21;10983:2;10965:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11031:2;11008:11;:20;11020:7;11008:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11104:7;11100:2;11085:27;;11094:4;11085:27;;;;;;;;;;;;10403:716;;;:::o;17381:1128::-;17643:22;17668:32;17698:1;17668:12;:18;17681:4;17668:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17643:57;;17710:18;17731:17;:26;17749:7;17731:26;;;;;;;;;;;;17710:47;;17875:14;17861:10;:28;17857:323;;17905:19;17927:12;:18;17940:4;17927:18;;;;;;;;;;;;;;;17946:14;17927:34;;;;;;;;;;;;;;;;17905:56;;18009:11;17976:12;:18;17989:4;17976:18;;;;;;;;;;;;;;;17995:10;17976:30;;;;;;;;;;;;;;;:44;;;;18125:10;18092:17;:30;18110:11;18092:30;;;;;;;;;;;:43;;;;17857:323;;18266:12;:18;18279:4;18266:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17381:1128;;;;:::o;16227:183::-;16340:12;:16;16353:2;16340:16;;;;;;;;;;;;;;;:23;;;;16311:17;:26;16329:7;16311:26;;;;;;;;;;;:52;;;;16373:12;:16;16386:2;16373:16;;;;;;;;;;;;;;;16395:7;16373:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16373:30:0;;;;;;;;;;;;;;;;;;;;;;16227:183;;:::o;15409:196::-;15472:24;15484:2;15488:7;15472:11;:24::i;:::-;15507:40;15535:2;15539:7;15507:27;:40::i;:::-;15558;15590:7;15558:31;:40::i;:::-;15409:196;;:::o;21782:346::-;21849:16;21857:7;21849;:16::i;:::-;21840:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22078:43;22088:13;22078:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22103:17;22112:7;22103:8;:17::i;:::-;22078:9;:43::i;:::-;22056:10;:19;22067:7;22056:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21782:346;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;12075:171:0:-;12174:1;12138:38;;:15;:24;12154:7;12138:24;;;;;;;;;;;;;;;;;;;;;:38;;;12134:106;;12227:1;12192:15;:24;12208:7;12192:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12134:106;12075:171;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;9695:509:0:-;9864:1;9850:16;;:2;:16;;;;9842:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9912:16;9920:7;9912;:16::i;:::-;9911:17;9903:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10067:2;10044:11;:20;10056:7;10044:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10079:33;:17;:21;10097:2;10079:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10189:7;10185:2;10164:33;;10181:1;10164:33;;;;;;;;;;;;9695:509;;:::o;16605:161::-;16708:10;:17;;;;16681:15;:24;16697:7;16681:24;;;;;;;;;;;:44;;;;16735:10;16751:7;16735:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16735:24:0;;;;;;;;;;;;;;;;;;;;;;16605:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;501:3670:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// pragma solidity >=0.4.21 <0.6.0;\npragma solidity >=0.5.0;\nimport \"./ERC721Mintable.sol\";\nimport \"./Verifier.sol\";\n\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\ncontract SquareVerifier is Verifier {\n//     // function verifyTx(uint[2] memory a, uint[2][2] memory b, uint[2] memory c, uint[2] memory input) public returns (bool r);\n}\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token {\n    SquareVerifier private verifierContract;\n    \n    constructor(address verifierAddress) CustomERC721Token() public {\n        verifierContract = SquareVerifier(verifierAddress);\n    }\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        // uint256 solutionIndex;\n        // address solutionAddress;\n        // // bool solutionExists;\n        // // bool minted;\n        // bytes32 hash;\n        // bytes32 index;\n        uint256 tokenId;\n        address to;\n        bytes32 tokenHash;\n        bool exist;\n    }\n\n    // TODO define an array of the above struct\n    mapping(uint256 => Solution) solutions;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => bool) private uniqueSolutions;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionAdded(address to, uint256 tokenId,  bytes32 tokenHash);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(address to, uint256 tokenId, uint[2] memory a, uint[2][2] memory b, uint[2] memory c, uint[2] memory input) public {\n        \n        bytes32 solutionHash = keccak256(abi.encodePacked(a, b, c, input));\n        require(!uniqueSolutions[solutionHash], \"Solution already exists\");\n\n        // bool check = verifyTx(a, b, c, input);\n\n        // require(verifyTx(a, b, c, input), \"Proof is not valid\");\n\n        // await this.contract.addSolution(tokenHolder, 1, proof, otherAccount, {from: owner});\n\n        Solution memory solution = Solution(tokenId, to, solutionHash, true);\n        solutions[tokenId] = solution;\n        uniqueSolutions[solutionHash] = true;\n\n\n        // uniqueSolutions[solutionHash] = Solution({index: counter, to: msg.sender, tokenHash: solutionHash});\n        // counter+=1;\n        // bool verified = verifierContract.verifyTx(a, b, c, input);\n\n\n        // Solution memory _soln = Solution({tokenId: _index, to: _to});\n        // submittedSolutions.push(_soln);\n        // uniqueSolutions[_tokenHash] = _soln;\n\n        \n        emit SolutionAdded(to, tokenId, solutionHash);\n        // require(verified, \"Solution could not be verified\");\n\n        // solutions[solutionHash] = Solution(numberOfSolutions, msg.sender, true, false);\n        \n        // emit SolutionAdded(numberOfSolutions, msg.sender);\n        // numberOfSolutions = numberOfSolutions + 1;\n    }\n\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n\n    function mint(address to, uint256 tokenId) public returns(bool){\n        // bytes32 solutionHash = keccak256(abi.encodePacked(a, b, c, input));\n        // let result = await this.contract.mintNewNFT(account_two, 2, proofJson.proof.a, proofJson.proof.b, proofJson.proof.c, {from: account_one});\n        // require(uniqueSolutions[solutionHash].solutionAddress == true, \"Solution does not exist\");\n        // require(uniqueSolutions[solutionHash].minted == false, \"Token already minted\");\n        // require(uniqueSolutions[solutionHash].to == address(0), \"Sender does not match address\");\n        require(solutions[tokenId].exist, \"Duplicate solution\");\n        // require(verifierContract.)\n        // super.mint(_solutionAddress, uniqueSolutions[solutionHash].solutionIndex);\n        // uniqueSolutions[solutionHash].minted = true;\n\n        //addSolution(a, b, c, input);\n        //emit SolutionAdded(msg.sender, counter, solutionHash);\n        return super.mint(to, tokenId);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "C:/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7578
      ],
      "SquareVerifier": [
        7437
      ]
    },
    "id": 7579,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7432,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:24:3"
      },
      {
        "absolutePath": "/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7433,
        "nodeType": "ImportDirective",
        "scope": 7579,
        "sourceUnit": 1106,
        "src": "61:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7434,
        "nodeType": "ImportDirective",
        "scope": 7579,
        "sourceUnit": 10174,
        "src": "92:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7435,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10173,
              "src": "253:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10173",
                "typeString": "contract Verifier"
              }
            },
            "id": 7436,
            "nodeType": "InheritanceSpecifier",
            "src": "253:8:3"
          }
        ],
        "contractDependencies": [
          10173
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7437,
        "linearizedBaseContracts": [
          7437,
          10173
        ],
        "name": "SquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7579,
        "src": "226:171:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7438,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1105,
              "src": "532:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1105",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7439,
            "nodeType": "InheritanceSpecifier",
            "src": "532:17:3"
          }
        ],
        "contractDependencies": [
          79,
          136,
          182,
          668,
          966,
          1076,
          1105,
          7430
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7578,
        "linearizedBaseContracts": [
          7578,
          1105,
          1076,
          7430,
          966,
          668,
          182,
          136,
          79
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7441,
            "name": "verifierContract",
            "nodeType": "VariableDeclaration",
            "scope": 7578,
            "src": "556:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SquareVerifier_$7437",
              "typeString": "contract SquareVerifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7440,
              "name": "SquareVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7437,
              "src": "556:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SquareVerifier_$7437",
                "typeString": "contract SquareVerifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7454,
              "nodeType": "Block",
              "src": "670:67:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7448,
                      "name": "verifierContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7441,
                      "src": "680:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$7437",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7450,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7443,
                          "src": "714:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7449,
                        "name": "SquareVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7437,
                        "src": "699:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SquareVerifier_$7437_$",
                          "typeString": "type(contract SquareVerifier)"
                        }
                      },
                      "id": 7451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "699:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$7437",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "src": "680:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SquareVerifier_$7437",
                      "typeString": "contract SquareVerifier"
                    }
                  },
                  "id": 7453,
                  "nodeType": "ExpressionStatement",
                  "src": "680:50:3"
                }
              ]
            },
            "documentation": null,
            "id": 7455,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 7446,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7445,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1105,
                  "src": "643:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1105_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "643:19:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7443,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7455,
                  "src": "618:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:25:3"
            },
            "returnParameters": {
              "id": 7447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:3"
            },
            "scope": 7578,
            "src": "606:131:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7464,
            "members": [
              {
                "constant": false,
                "id": 7457,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 7464,
                "src": "1026:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7456,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1026:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7459,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 7464,
                "src": "1051:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7458,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1051:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7461,
                "name": "tokenHash",
                "nodeType": "VariableDeclaration",
                "scope": 7464,
                "src": "1071:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7460,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1071:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7463,
                "name": "exist",
                "nodeType": "VariableDeclaration",
                "scope": 7464,
                "src": "1098:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7462,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1098:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7578,
            "src": "817:298:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7468,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7578,
            "src": "1169:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7464_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7467,
              "keyType": {
                "id": 7465,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1177:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1169:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7464_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7466,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7464,
                "src": "1188:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7464_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7472,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7578,
            "src": "1279:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7471,
              "keyType": {
                "id": 7469,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1287:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1279:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7470,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1298:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7480,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7474,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7480,
                  "src": "1415:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7476,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7480,
                  "src": "1427:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7478,
                  "indexed": false,
                  "name": "tokenHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 7480,
                  "src": "1445:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7477,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1414:49:3"
            },
            "src": "1395:69:3"
          },
          {
            "body": {
              "id": 7552,
              "nodeType": "Block",
              "src": "1689:1268:3",
              "statements": [
                {
                  "assignments": [
                    7506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7506,
                      "name": "solutionHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7552,
                      "src": "1708:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7505,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1708:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7516,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7510,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7488,
                            "src": "1758:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7511,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7494,
                            "src": "1761:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7512,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7498,
                            "src": "1764:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7513,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7502,
                            "src": "1767:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7508,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10502,
                            "src": "1741:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1741:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1741:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7507,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10509,
                      "src": "1731:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1708:66:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1792:30:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7518,
                            "name": "uniqueSolutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7472,
                            "src": "1793:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7520,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7519,
                            "name": "solutionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7506,
                            "src": "1809:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1793:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920657869737473",
                        "id": 7522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1824:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        },
                        "value": "Solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        }
                      ],
                      "id": 7517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10518,
                        10519
                      ],
                      "referencedDeclaration": 10519,
                      "src": "1784:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7524,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:66:3"
                },
                {
                  "assignments": [
                    7526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7526,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7552,
                      "src": "2078:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7464_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7525,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7464,
                        "src": "2078:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7464_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7533,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7528,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "2114:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7529,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7482,
                        "src": "2123:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7530,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "2127:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 7531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2141:4:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7527,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7464,
                      "src": "2105:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7464_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2105:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7464_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2078:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7534,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7468,
                        "src": "2156:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7464_storage_$",
                          "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7536,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7535,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "2166:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2156:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7464_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7537,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7526,
                      "src": "2177:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7464_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "2156:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7464_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7539,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7540,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7472,
                        "src": "2195:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7542,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7541,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "2211:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2195:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2227:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2195:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7545,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:36:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7547,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7482,
                        "src": "2643:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7548,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "2647:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7549,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "2656:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7546,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7480,
                      "src": "2629:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 7550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7551,
                  "nodeType": "EmitStatement",
                  "src": "2624:45:3"
                }
              ]
            },
            "documentation": null,
            "id": 7553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7482,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1574:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7484,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1586:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1586:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7488,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1603:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7485,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1603:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7487,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1608:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1603:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7494,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1621:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7489,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1621:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7491,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1626:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1621:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7493,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1629:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1621:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7498,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1642:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7495,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1642:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7497,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1647:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1642:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7502,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1660:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7499,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1660:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7501,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1665:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1660:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1573:108:3"
            },
            "returnParameters": {
              "id": 7504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1689:0:3"
            },
            "scope": 7578,
            "src": "1553:1404:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7576,
              "nodeType": "Block",
              "src": "3249:920:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7563,
                            "name": "solutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7468,
                            "src": "3790:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7464_storage_$",
                              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                            }
                          },
                          "id": 7565,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7564,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7557,
                            "src": "3800:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3790:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7464_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "id": 7566,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7463,
                        "src": "3790:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4475706c696361746520736f6c7574696f6e",
                        "id": 7567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3816:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_adabbdbaa7be0be857c7f10e87f0199d5579af3a467afb365b6d8a2da678ad18",
                          "typeString": "literal_string \"Duplicate solution\""
                        },
                        "value": "Duplicate solution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_adabbdbaa7be0be857c7f10e87f0199d5579af3a467afb365b6d8a2da678ad18",
                          "typeString": "literal_string \"Duplicate solution\""
                        }
                      ],
                      "id": 7562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10518,
                        10519
                      ],
                      "referencedDeclaration": 10519,
                      "src": "3782:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3782:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7569,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7572,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7555,
                        "src": "4150:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7573,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7557,
                        "src": "4154:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7570,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10574,
                        "src": "4139:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7578",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1104,
                      "src": "4139:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4139:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7561,
                  "id": 7575,
                  "nodeType": "Return",
                  "src": "4132:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 7577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7555,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "3200:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3200:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7557,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "3212:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3212:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3199:29:3"
            },
            "returnParameters": {
              "id": 7561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7560,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "3244:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7559,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3243:6:3"
            },
            "scope": 7578,
            "src": "3186:983:3",
            "stateMutability": "nonpayable",
            "superFunction": 1104,
            "visibility": "public"
          }
        ],
        "scope": 7579,
        "src": "501:3670:3"
      }
    ],
    "src": "36:4164:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7578
      ],
      "SquareVerifier": [
        7437
      ]
    },
    "id": 7579,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7432,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:24:3"
      },
      {
        "absolutePath": "/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7433,
        "nodeType": "ImportDirective",
        "scope": 7579,
        "sourceUnit": 1106,
        "src": "61:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/theIzz/Desktop/blockChain/Capstone/Blockchain-Capstone-master/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7434,
        "nodeType": "ImportDirective",
        "scope": 7579,
        "sourceUnit": 10174,
        "src": "92:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7435,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10173,
              "src": "253:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10173",
                "typeString": "contract Verifier"
              }
            },
            "id": 7436,
            "nodeType": "InheritanceSpecifier",
            "src": "253:8:3"
          }
        ],
        "contractDependencies": [
          10173
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7437,
        "linearizedBaseContracts": [
          7437,
          10173
        ],
        "name": "SquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7579,
        "src": "226:171:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7438,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1105,
              "src": "532:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1105",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7439,
            "nodeType": "InheritanceSpecifier",
            "src": "532:17:3"
          }
        ],
        "contractDependencies": [
          79,
          136,
          182,
          668,
          966,
          1076,
          1105,
          7430
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7578,
        "linearizedBaseContracts": [
          7578,
          1105,
          1076,
          7430,
          966,
          668,
          182,
          136,
          79
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7441,
            "name": "verifierContract",
            "nodeType": "VariableDeclaration",
            "scope": 7578,
            "src": "556:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SquareVerifier_$7437",
              "typeString": "contract SquareVerifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7440,
              "name": "SquareVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7437,
              "src": "556:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SquareVerifier_$7437",
                "typeString": "contract SquareVerifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7454,
              "nodeType": "Block",
              "src": "670:67:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7448,
                      "name": "verifierContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7441,
                      "src": "680:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$7437",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7450,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7443,
                          "src": "714:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7449,
                        "name": "SquareVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7437,
                        "src": "699:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SquareVerifier_$7437_$",
                          "typeString": "type(contract SquareVerifier)"
                        }
                      },
                      "id": 7451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "699:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$7437",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "src": "680:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SquareVerifier_$7437",
                      "typeString": "contract SquareVerifier"
                    }
                  },
                  "id": 7453,
                  "nodeType": "ExpressionStatement",
                  "src": "680:50:3"
                }
              ]
            },
            "documentation": null,
            "id": 7455,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 7446,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7445,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1105,
                  "src": "643:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1105_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "643:19:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7443,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7455,
                  "src": "618:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:25:3"
            },
            "returnParameters": {
              "id": 7447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:3"
            },
            "scope": 7578,
            "src": "606:131:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7464,
            "members": [
              {
                "constant": false,
                "id": 7457,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 7464,
                "src": "1026:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7456,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1026:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7459,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 7464,
                "src": "1051:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7458,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1051:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7461,
                "name": "tokenHash",
                "nodeType": "VariableDeclaration",
                "scope": 7464,
                "src": "1071:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7460,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1071:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7463,
                "name": "exist",
                "nodeType": "VariableDeclaration",
                "scope": 7464,
                "src": "1098:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7462,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1098:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7578,
            "src": "817:298:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7468,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7578,
            "src": "1169:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7464_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7467,
              "keyType": {
                "id": 7465,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1177:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1169:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7464_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7466,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7464,
                "src": "1188:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7464_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7472,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7578,
            "src": "1279:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7471,
              "keyType": {
                "id": 7469,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1287:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1279:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7470,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1298:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7480,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7474,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7480,
                  "src": "1415:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7476,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7480,
                  "src": "1427:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7478,
                  "indexed": false,
                  "name": "tokenHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 7480,
                  "src": "1445:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7477,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1414:49:3"
            },
            "src": "1395:69:3"
          },
          {
            "body": {
              "id": 7552,
              "nodeType": "Block",
              "src": "1689:1268:3",
              "statements": [
                {
                  "assignments": [
                    7506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7506,
                      "name": "solutionHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7552,
                      "src": "1708:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7505,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1708:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7516,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7510,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7488,
                            "src": "1758:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7511,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7494,
                            "src": "1761:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7512,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7498,
                            "src": "1764:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7513,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7502,
                            "src": "1767:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7508,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10502,
                            "src": "1741:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1741:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1741:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7507,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10509,
                      "src": "1731:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1708:66:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1792:30:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7518,
                            "name": "uniqueSolutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7472,
                            "src": "1793:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7520,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7519,
                            "name": "solutionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7506,
                            "src": "1809:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1793:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920657869737473",
                        "id": 7522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1824:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        },
                        "value": "Solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        }
                      ],
                      "id": 7517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10518,
                        10519
                      ],
                      "referencedDeclaration": 10519,
                      "src": "1784:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7524,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:66:3"
                },
                {
                  "assignments": [
                    7526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7526,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7552,
                      "src": "2078:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7464_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7525,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7464,
                        "src": "2078:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7464_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7533,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7528,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "2114:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7529,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7482,
                        "src": "2123:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7530,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "2127:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 7531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2141:4:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7527,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7464,
                      "src": "2105:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7464_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2105:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7464_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2078:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7534,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7468,
                        "src": "2156:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7464_storage_$",
                          "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7536,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7535,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "2166:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2156:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7464_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7537,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7526,
                      "src": "2177:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7464_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "2156:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7464_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7539,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7540,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7472,
                        "src": "2195:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7542,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7541,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "2211:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2195:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2227:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2195:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7545,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:36:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7547,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7482,
                        "src": "2643:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7548,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "2647:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7549,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "2656:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7546,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7480,
                      "src": "2629:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 7550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7551,
                  "nodeType": "EmitStatement",
                  "src": "2624:45:3"
                }
              ]
            },
            "documentation": null,
            "id": 7553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7482,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1574:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7484,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1586:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1586:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7488,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1603:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7485,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1603:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7487,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1608:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1603:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7494,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1621:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7489,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1621:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7491,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1626:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1621:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7493,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1629:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1621:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7498,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1642:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7495,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1642:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7497,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1647:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1642:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7502,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "1660:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7499,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1660:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7501,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1665:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1660:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1573:108:3"
            },
            "returnParameters": {
              "id": 7504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1689:0:3"
            },
            "scope": 7578,
            "src": "1553:1404:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7576,
              "nodeType": "Block",
              "src": "3249:920:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7563,
                            "name": "solutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7468,
                            "src": "3790:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7464_storage_$",
                              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                            }
                          },
                          "id": 7565,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7564,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7557,
                            "src": "3800:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3790:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7464_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "id": 7566,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7463,
                        "src": "3790:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4475706c696361746520736f6c7574696f6e",
                        "id": 7567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3816:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_adabbdbaa7be0be857c7f10e87f0199d5579af3a467afb365b6d8a2da678ad18",
                          "typeString": "literal_string \"Duplicate solution\""
                        },
                        "value": "Duplicate solution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_adabbdbaa7be0be857c7f10e87f0199d5579af3a467afb365b6d8a2da678ad18",
                          "typeString": "literal_string \"Duplicate solution\""
                        }
                      ],
                      "id": 7562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10518,
                        10519
                      ],
                      "referencedDeclaration": 10519,
                      "src": "3782:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3782:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7569,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7572,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7555,
                        "src": "4150:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7573,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7557,
                        "src": "4154:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7570,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10574,
                        "src": "4139:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7578",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1104,
                      "src": "4139:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4139:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7561,
                  "id": 7575,
                  "nodeType": "Return",
                  "src": "4132:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 7577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7555,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "3200:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3200:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7557,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "3212:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3212:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3199:29:3"
            },
            "returnParameters": {
              "id": 7561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7560,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "3244:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7559,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3243:6:3"
            },
            "scope": 7578,
            "src": "3186:983:3",
            "stateMutability": "nonpayable",
            "superFunction": 1104,
            "visibility": "public"
          }
        ],
        "scope": 7579,
        "src": "501:3670:3"
      }
    ],
    "src": "36:4164:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransfer",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xb28582aaae510e6d1868676347916349fa4c0c49734e1a01e4373ff26a57f092": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "tokenHash",
              "type": "bytes32"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb46240624f62d83a9798259CEb0abC19c4F65d8c",
      "transactionHash": "0x09d498b02fe9e3a881029730fad8873da4e2e42a42396cb486200f8b322f6215"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-03T00:01:37.195Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}